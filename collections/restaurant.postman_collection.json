{
	"info": {
		"_postman_id": "1d0302b1-5ff1-4a32-94cf-2ef2e3c96b4b",
		"name": "Restaurant",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32898876"
	},
	"item": [
		{
			"name": "Crear restaurante válido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"restaurant_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"nombre\": \"La Toscana\", \"direccion\": \"Calle 123\", \"tipoCocina\": \"Italiana\", \"paginaWeb\": \"https://toscanarest.com\"}"
				},
				"url": {
					"raw": "{{baseURL}}/restaurants",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"restaurants"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear restaurante inválido (tipo cocina no válido)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El tipo de cocina no es valido\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"nombre\": \"Fake\", \"direccion\": \"123\", \"tipoCocina\": \"Francesa\", \"paginaWeb\": \"http://invalid.com\"}"
				},
				"url": {
					"raw": "{{baseURL}}/restaurants",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"restaurants"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener todos los restaurantes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of restaurants > ' + 0, function () {\r",
							"   var data = pm.response.json()\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/restaurants",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"restaurants"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener restaurante por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/restaurants/{{restaurant_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"restaurants",
						"{{restaurant_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener restaurante con ID inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El restaurante con el id dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/restaurants/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"restaurants",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar restaurante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"nombre\": \"La Toscana Renovada\", \"direccion\": \"wefwefwefwef\", \"tipoCocina\": \"Italiana\", \"paginaWeb\": \"https://pruebaput.com\"}"
				},
				"url": {
					"raw": "{{baseURL}}/restaurants/{{restaurant_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"restaurants",
						"{{restaurant_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar restaurante con ID inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El restaurante con el id dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"nombre\": \"Inexistente\", \"direccion\": \"N/A\", \"tipoCocina\": \"Japonesa\", \"paginaWeb\": \"https://noexiste.com\"}"
				},
				"url": {
					"raw": "{{baseURL}}/restaurants/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"restaurants",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar restaurante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/restaurants/{{restaurant_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"restaurants",
						"{{restaurant_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar restaurante con ID inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El restaurante con el id dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/restaurants/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"restaurants",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		}
	]
}